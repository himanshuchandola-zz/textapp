{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","href","Navbar","to","title","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","ClassName","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","charAt","slice","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","console","log","document","getElementById","select","navigator","clipboard","writeText","newtext","replaceAll","trim","split","input","prompt","includes","index","indexOf","splice","join","replace","alert","reverse","filter","element","length","defaultProps","Alert","height","role","word","lower","capitalize","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cf308c69.chunk.js","sourcesContent":["import React, {} from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // })\r\n    // const[btntext, setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    // const toggleStyle = ()=>{\r\n    //     if (myStyle.color === 'black'){\r\n    //         setMyStyle({\r\n\r\n    //             color: 'white',\r\n    //             backgroundColor: 'black',\r\n    //             border: '1px solid white'\r\n    //         })\r\n    //         setBtnText(\"Enable Light Mode\")\r\n    //     }\r\n    //     else{\r\n    //         setMyStyle({\r\n\r\n    //             color: 'black',\r\n    //             backgroundColor: 'white'\r\n    //         })\r\n    //         setBtnText(\"Enable Dark Mode\")\r\n    //     }\r\n    // }\r\n\r\n    let myStyle = {\r\n        color: props.mode ==='dark'?'white':'#042743',\r\n        backgroundColor: props.mode ==='dark'?'#042743':'white'\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <h1>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        <strong>Analyze Your Text</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\"style={myStyle}>\r\n                       Textapp gives you a way to analyze your text quickly with many features added.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    <strong>   Free to Use </strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\"style={myStyle}>\r\n                        Textapp is a free multi features tool that provides various functions. Our app is open source and free to use without any ads or anything with fast response. Source code is available <a href=\"https://github.com/himanshuchandola/textapp\">here</a>\r\n\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    <strong>  Browser Compatiblity </strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        Our app is Compatible in all modern web browsers and it is responsive in mobile devices as well.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n    }\r\n\r\n    Navbar.defaultProps = {\r\n        title: 'Set title Here',\r\n        aboutText: 'About'\r\n        }","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperCase\", \"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LowerCase\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Has been Cleared\", \"success\");\r\n    }\r\n\r\n    const capitalize = () => {\r\n        \r\n        let firstchar = text.charAt(0); \r\n        let newText= firstchar.toUpperCase(); \r\n        setText(newText+text.slice(1)); \r\n        props.showAlert(\"First letter of Text is Changed to Capital Letter\", \"success\");\r\n\r\n    }\r\n\r\n    const handleTextToSpeech = () => {\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;     //  text what you written\r\n        window.speechSynthesis.speak(msg);\r\n        props.showAlert(\"Text Converted to Audio\", \"success\");\r\n      };\r\n    \r\n    const handleCopy =() =>{\r\n      console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard\", \"success\");\r\n      }\r\n\r\n    const handleRwClick = () => {\r\n    let newtext = text.toLowerCase();\r\n    newtext = newtext.replaceAll(\".\",\"\");\r\n    newtext = newtext.trim().split(\" \");\r\n    let input = prompt(\"Enter the word you want to remove : \");\r\n    if (input != null) {\r\n      input = input.toLowerCase();\r\n      while (newtext.includes(input)) {\r\n        let index = newtext.indexOf(input);\r\n        newtext.splice(index, 1);\r\n      }\r\n      newtext = newtext.join(\" \");\r\n      newtext = newtext.replace(newtext.charAt(0),newtext.charAt(0).toUpperCase());\r\n      setText(newtext);\r\n      props.showAlert(\"Your Selected Text has been Deleted\", \"success\");\r\n    } else {\r\n      alert(\"You entered nothing 😑\");\r\n    }\r\n  };\r\n\r\n  const handleReverseClick = () =>{\r\n    let newText = text.split(\" \").reverse( ).join(\" \");\r\n    setText(newText)\r\n    props.showAlert(\"Text is Reversed\", \"success\");\r\n}\r\n\r\n    const handleOnChange = (event)=>{\r\n       // console.log(\"on Change\");\r\n        setText(event.target.value);\r\n    }\r\n    const[text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div ClassName=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'black':'white',\r\n          color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div> \r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={capitalize}>Capitalize First Text</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleTextToSpeech}>Text to Audio</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text to Clipboard</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleRwClick}>Remove Word from Text</button>\r\n                <button className=\"btn btn-primary gy-1 my-1\" onClick={handleReverseClick}>Reverse Text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Text Summary</h2>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes to Read the above Text</p>\r\n            <h2>Preview Text</h2>\r\n            <p>{text.length>0?text:\"Enter something in textbox above to Preview here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n       {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            {capitalize(props.alert.type)} : {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light');\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type)=>{\r\n  setAlert({\r\n    msg: message,\r\n    type: type\r\n  })\r\n  setTimeout(() => {\r\n    setAlert(null);\r\n  }, 1500);\r\n  }\r\n\r\n\r\n  const toggleMode = ()=>{\r\n    if(mode==='light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      showAlert(\"Dark Mode has been enabled\", \"success\");\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light Mode has been enabled\", \"success\");\r\n    }\r\n\r\n  }\r\n  return (\r\n  <>\r\n{/* <Navbar title=\"TextApp by Himanshu Chandola\" aboutText=\"About\"/> */}\r\n<Router>\r\n<Navbar title=\"TextApp\" mode={mode} toggleMode={toggleMode} />\r\n<Alert alert={alert}/>\r\n<div className=\"container my-3\">\r\n        <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About mode={mode} />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n          <TextForm showAlert={showAlert} heading=\"Enter The Text to analyze below\" mode={mode}/>\r\n          </Route>\r\n        </Switch>\r\n        </div>\r\n        </Router>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}